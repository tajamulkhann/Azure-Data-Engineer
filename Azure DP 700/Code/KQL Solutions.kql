// Assignment 1

// Use 'take' to view a sample number of records in the table and check the data.
Automotive
| distinct dropoffBoro=dropoff_boroname
| order by dropoffBoro 

Automotive
| limit 1000
| project dropoff_boroname, dropoff_ntaname, pickup_boroname, pickup_ntaname, trip_distance, fare_amount, total_amount
| order by dropoff_boroname asc, pickup_boroname asc, dropoff_ntaname asc, pickup_ntaname asc

Automotive
| top 10 by total_amount
| project pickuptime=pickup_datetime, dropoffTime=dropoff_datetime, distance=trip_distance, total_amount
| project-rename totalAmount=total_amount
| extend duration= dropoffTime-pickuptime

// Assignment 2

Automotive
| limit 10000
| project dropoff=dropoff_boroname, pickup=pickup_boroname, amount=total_amount, distance=trip_distance
| order by dropoff asc, pickup asc, amount asc, distance asc
| where dropoff =~ 'Bronx'
| where dropoff startswith "Bron"
| where dropoff has_any ('Bronx', 'Manhattan')
| where dropoff has_all ('Bronx', 'Manhattan')

Automotive
| summarize calc = sum(total_amount) by dropoff_boroname

Automotive
| summarize Tripdistance = sum(trip_distance),max(total_amount), sumif(total_amount, dropoff_boroname == 'Manhattan'), count() by dropoff_boroname, pickup_boroname


// Assignmnet 3

Automotive
| limit 1000
| project pickup_boroname, pickup_ntaname, dropoff_boroname, dropoff_ntaname
| extend pickup = strcat_delim(": ", pickup_boroname, pickup_ntaname)
| extend dropoff = strcat_delim(": ", dropoff_boroname, dropoff_ntaname)
| extend eastindex = indexof(pickup, "East")
| extend pickupBefore = substring(pickup, 0, eastindex)
| extend pickupAfter = substring(pickup, eastindex)
| where pickup has "east"
| order by pickup_boroname asc, pickup_ntaname asc, dropoff_boroname asc, dropoff_ntaname asc
| extend dropoff = replace_string(dropoff, "East", "West")

// Assignment 4
Automotive
| limit 10000
| project total_amount, dropoff_longitude = todouble(dropoff_longitude), pickup_longitude = todouble(pickup_longitude), pickup_datetime, dropoff_datetime
| extend amount = round(total_amount, 0)
| extend duration = dropoff_datetime - pickup_datetime
| extend distance = dropoff_longitude - pickup_longitude
| extend direction = sign(distance)
| extend pickupDate = format_datetime(pickup_datetime, "yyyy-mm-dd")
| extend pickupDay = dayofweek(pickup_datetime)
| summarize totalDistance = sum(distance), totalDuration = sum(duration) by pickupDate, pickupDay

// Assignment 5 - Union and Join
(Automotive
| project pickup_datetime, pickup_longitude, pickup_latitude, total_amount
| where pickup_datetime between (todatetime('2014-05-01') .. todatetime('2014-05-07 23:59:59')))
| union 
((Automotive
| project pickup_datetime, dropoff_longitude, pickup_latitude, total_amount
| where pickup_datetime between (todatetime('2014-06-01') .. todatetime('2014-06-07 23:59:59'))))

(Automotive
| extend pickupDate = startofday(pickup_datetime)
| summarize amount = sum(total_amount) by pickup_datetime, pickupDate
| where pickup_datetime between (todatetime('2014-05-01') .. todatetime('2014-05-07 23:59:59')))
| join
(Automotive
| extend pickupDate = startofday(pickup_datetime)
| summarize amountDaily = sum(total_amount) by pickupDate)
on $left.pickupDate == $right.pickupDate
| order by pickupDate
| extend avgamount = amount / amountDaily * 100

// Assignment 5 - using iif/iff and case & Cleaning Data
Automotive
| distinct 
    pickup = startofday(pickup_datetime), 
    pickupWeekday = dayofweek(pickup_datetime)/1d
| extend pickupDayName = case(
    pickupWeekday == 0, "Sunday",
    pickupWeekday == 1, "Monday",
    pickupWeekday == 2, "Tuesday",
    pickupWeekday == 3, "Wednesday",
    pickupWeekday == 4, "Thursday",
    pickupWeekday == 5, "Friday",
    pickupWeekday == 6, "Saturday",
    "Unknown"
)
| order by pickup asc

Automotive
| limit 10000
| distinct pickup_boroname, dropoff_boroname
| extend boro = coalesce(pickup_boroname, dropoff_boroname)
